{
  "name": "gulp-ngdocs",
  "version": "0.2.13",
  "author": {
    "name": "nikhilmodak"
  },
  "description": "gulp plugin for angularjs documentation",
  "main": "index",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nikhilmodak/gulp-ngdocs.git"
  },
  "keywords": [
    "gulpplugin",
    "angular",
    "gulp",
    "ngdocs",
    "documention"
  ],
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "marked": "0.3.2",
    "vinyl-fs": "0.3.7",
    "gulp-util": "3.0.0",
    "extend": "1.3.0",
    "lodash": "2.4.1",
    "path": "0.4.9",
    "merge-stream": "0.1.5",
    "string_decoder": "0.10.31",
    "through2": "0.6.1",
    "canonical-path": "0.0.2",
    "angular": "~1.3.1",
    "angular-animate": "~1.3.1"
  },
  "devDependencies": {
    "del": "^1.1.1",
    "gulp": "^3.8.10",
    "jasmine-node": "^1.14.5"
  },
  "scripts": {
    "test": "jasmine-node --color spec"
  },
  "gitHead": "795b61e15eb6da361e6a8f5077d3a5dab4345060",
  "readme": "gulp-ngdocs\n===========\n\nGulp plugin for building [AngularJS](http://docs.angularjs.org) like documentation. This is inspired from [grunt-ngdocs](https://www.npmjs.org/package/grunt-ngdocs).\n\n##Setup\n\n`npm install gulp-ngdocs --save-dev`\n\n##Usage\n\nCreate a `ngdocs` gulp task\n\n```js\ngulp.task('ngdocs', [], function () {\n  var gulpDocs = require('gulp-ngdocs');\n  return gulp.src('path/to/src/*.js')\n    .pipe(gulpDocs.process())\n    .pipe(gulp.dest('./docs'));\n});\n```\nCreate a `ngdocs` gulp task with options\n\n```js\ngulp.task('ngdocs', [], function () {\n  var gulpDocs = require('gulp-ngdocs');\n  var options = {\n    scripts: ['../app.min.js'],\n    html5Mode: true,\n    startPage: '/api',\n    title: \"My Awesome Docs\",\n    image: \"path/to/my/image.png\",\n    imageLink: \"http://my-domain.com\",\n    titleLink: \"/api\"\n  }\n  return gulp.src('path/to/src/*.js')\n    .pipe(gulpDocs.process(options))\n    .pipe(gulp.dest('./docs'));\n});\n```\n\nTo use a different AngularJS version pass `angular` and `angular-animate` files in scripts.\n\n```js\ngulp.task('ngdocs', [], function () {\n  var gulpDocs = require('gulp-ngdocs');\n  var options = {\n    /* pass both .min.js and .min.js.map files for angular and angular-animate */\n    scripts: [\n      'bower_components/angular/angular.min.js',\n      'bower_components/angular/angular.min.js.map',\n      'bower_components/angular-animate/angular-animate.min.js',\n      'bower_components/angular-animate/angular-animate.min.js.map'\n    ]\n  }\n\n  /*\n  If you choose to use the remote links pass in the .min.js links for angular and angular-animate\n\n  var options = {\n    scripts: [\n      'http://ajax.googleapis.com/ajax/libs/angularjs/<version>/angular.min.js',\n      'http://ajax.googleapis.com/ajax/libs/angularjs/<version>/angular-animate.min.js'\n    ]\n  }\n  */\n  return gulp.src('path/to/src/*.js')\n    .pipe(gulpDocs.process(options))\n    .pipe(gulp.dest('./docs'));\n});\n```\n\nIf you would like to divide your documentation into different sections, use `gulpDocs.sections` instead of `gulp.src`.\n\n```js\ngulp.task('ngdocs', [], function () {\n  var gulpDocs = require('gulp-ngdocs');\n  var options = {\n    //options\n  }\n  return gulpDocs.sections({\n    api: {\n      glob:['src/**/*.js', '!src/**/*.spec.js'],\n      api: true,\n      title: 'API Documentation'\n    },\n    tutorial: {\n      glob: ['content/tutorial/*.ngdoc'],\n      title: 'Tutorial'\n    }\n  }).pipe(gulpDocs.process(options)).pipe(gulp.dest('./docs'));\n});\n```\n###Doc comment example\n\nA doc comment looks like this:\n```js\n/**\n * @ngdoc directive\n * @name rfx.directive:rAutogrow\n * @element textarea\n * @function\n *\n * @description\n * Resize textarea automatically to the size of its text content.\n *\n * **Note:** ie<9 needs polyfill for window.getComputedStyle\n *\n * @example\n   <example module=\"rfx\">\n     <file name=\"index.html\">\n         <textarea ng-model=\"text\"rx-autogrow class=\"input-block-level\"></textarea>\n         <pre>{{text}}</pre>\n     </file>\n   </example>\n */\nangular.module('rfx', []).directive('rAutogrow', function() {\n  //some nice code\n});\n```\n\nCheck out the [Writing AngularJS documentation wiki article](https://github.com/angular/angular.js/wiki/Writing-AngularJS-Documentation) to see what's possible,\nor take a look at the [AngularJS source code](https://github.com/angular/angular.js/tree/master/src/ng) for more examples.\n\n##Options\n\n####scripts\nSet additional custom JS files are loaded to the app. This allows the live examples to use custom directives, services, etc. The documentation app works with AngularJS 1.2+ and 1.3+. If you include a different version of AngularJS, make sure to include angular-animate.js as well.\n\nPossible values:\n\n  - `['path/to/file.js']` file will be copied into the docs, into a `js` folder\n  - `['http://example.com/file.js', 'https://example.com/file.js', '//example.com/file.js']` reference remote files (eg from a CDN)\n  - `['../app.js']` reference file relative to the dest folder\n\n####styles\n[default] `[]`\nCopy additional css files to the documentation app\n\n####analytics\nOptional include Google Analytics in the documentation app.\n\nExample usage:\n\n```js\nvar opts = {\n  analytics: {\n    account: 'UA-XXXXXX-YY',\n    domainName: 'http://mywebpage.com/'\n  }\n};\n```\n\n####discussions\nOptional include [discussions](http://disqus.com) in the documentation app.\n\n####editExample\n[default] `true`\nShow Edit Button for examples.\n\n####title\n[default] `\"API Documentation\"`\nTitle to put on the navbar and the page's `title` attribute.\n\n####startPage\n[default] `'/api'`\nSet first page to open.\n\n####html5Mode\n[default] `true`\nWhether or not to enable `html5Mode` in the docs application.  If true, then links will be absolute.  If false, they will be prefixed by `#/`.\n\n####image\nA URL or relative path to an image file to use in the top navbar.\n\n####titleLink\n[default] no anchor tag is used\nWraps the title text in an anchor tag with the provided URL.\n\n####imageLink\n[default] no anchor tag is used\nWraps the navbar image in an anchor tag with the provided URL.\n\n####bestMatch\n[default] `false`\nThe best matching page for a search query is highlighted and get selected on return.\nIf this option is set to true the best match is shown below the search field in an dropdown menu. Use this for long lists where the highlight is often not visible.\n\n####navTemplate\n[default] `null`\nPath to a template of a nav HTML template to include.  The css for it\nshould be that of listitems inside a bootstrap navbar:\n```html\n<header class=\"header\">\n  <div class=\"navbar\">\n    <ul class=\"nav\">\n      {{links to all the docs pages}}\n    </ul>\n    {{YOUR_NAV_TEMPLATE_GOES_HERE}}\n  </div>\n</header>\n```\nExample: 'templates/my-nav.html'\n\nThe template, if specified, is pre-processed using [_.template](http://lodash.com/docs#template).\n\n####loadDefaults\nUse this option to disable any of the four scripts `angular`, `angularAnimate`, `marked`, and `prettify` (google) which are loaded by default. This would give the user the ability to disable any scripts if they are using methods outside of regular angular/animate loading like browserify.\n\nExample usage:\n```js\nvar opts = {\n  loadDefaults: {\n    angularAnimate: false\n  }\n}\n```\n\n##Options for Sections\n\n####glob\n\n[required] glob pattern of files to parse for documentation comments.\n\n###title\n\n[default] name of the section. Set the title for the section in the documentation app.\n\n###api\n\n[default] `true` Set the name for the section in the documentation app.\n",
  "bugs": {
    "url": "https://github.com/nikhilmodak/gulp-ngdocs/issues"
  },
  "homepage": "https://github.com/nikhilmodak/gulp-ngdocs#readme",
  "_id": "gulp-ngdocs@0.2.13",
  "_shasum": "9f17f3cdcfbab9145a9264ebebd00f2450546863",
  "_from": "git+https://github.com/nikhilmodak/gulp-ngdocs.git#795b61e15eb6da361e6a8f5077d3a5dab4345060",
  "_resolved": "git+https://github.com/nikhilmodak/gulp-ngdocs.git#795b61e15eb6da361e6a8f5077d3a5dab4345060"
}
